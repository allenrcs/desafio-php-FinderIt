openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/books:
    get:
      summary: 'Get books.'
      operationId: getBooks
      description: 'This endpoint provides a list of books'
      parameters:
        -
          in: query
          name: user_id
          description: 'Id user.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Id user.'
            example: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Books
    post:
      summary: 'Create Book.'
      operationId: createBook
      description: 'It returns the created book.'
      parameters: []
      responses: {  }
      tags:
        - Books
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Book title.'
                  example: enim
                description:
                  type: string
                  description: 'Description title.'
                  example: 'Eveniet aliquid ut quae quae consequatur voluptatem praesentium.'
                credit:
                  type: integer
                  description: 'Credit title.'
                  example: 18
                image:
                  type: string
                  format: binary
                  description: 'Cover image.'
              required:
                - title
                - description
                - credit
                - image
  '/api/books/{book_id}':
    put:
      summary: 'Update Book.'
      operationId: updateBook
      description: 'It returns the created book.'
      parameters: []
      responses: {  }
      tags:
        - Books
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Book title.'
                  example: sed
                description:
                  type: string
                  description: 'Description title.'
                  example: 'Eveniet consequuntur consequatur sunt omnis nulla.'
                credit:
                  type: integer
                  description: 'Credit title.'
                  example: 2
                image:
                  type: string
                  format: binary
                  description: 'Cover image.'
    delete:
      summary: 'Delete book.'
      operationId: deleteBook
      description: 'This endpoint deletes a book with the specified ID in the URL.'
      parameters: []
      responses: {  }
      tags:
        - Books
    parameters:
      -
        in: path
        name: book_id
        description: 'The ID of the book.'
        example: 3
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Books
    description: ''
  -
    name: Endpoints
    description: ''
